#include <DS3231.h>
#include <Wire.h>
#include <Stepper.h>
//SERVO PIN10
//LED PIN8
//BUZZER PIN9
//SENSOR PIR2 (OUT)
#include <Servo.h>
// servomotor
Servo servoMotor;
int LED = 7;
int PIR = 3;
int BUZZER = 13;

// --- motor stepper
#define IN1 8
#define IN2 9
#define IN3 10
#define IN4 11
// 2048 pasos para una revolución completa (360 grados)
int pasosPorVuelta = 2048;
// Velocidad del stepper
int motSpeed = 15;
// 90 grados del stepper para abrir ventana
int pasosPara90Grados = pasosPorVuelta / 4;

//pines que utilizamos en arduino del stepper
Stepper myStepper(pasosPorVuelta, 8, 10, 9, 11);

// ---- DS3231
//Direccionamiento del hardware
DS3231 Clock;
RTClib RTC;
int year, month, day, hour, minute, second;
bool funcionEjecutada = false;
// función de utilidad DS3231
void establecerFechaYHora() {
  DateTime now = RTC.now();
  //se obtiene la fecha y hora
  year = now.year();
  month = now.month();
  day = now.day();
  hour = now.hour();
  minute = now.minute();
  second = now.second();
  // Se imprime en el puerto serial
  // Se imprime la fecha en el puerto serial
  Serial.print("Fecha: ");
  Serial.print(day);
  Serial.print("/");
  Serial.print(month);
  Serial.print("/");
  Serial.println(year);

  // Se imprime la hora en el puerto serial
  Serial.print("Hora: ");
  Serial.print(hour);
  Serial.print(":");
  Serial.print(minute);
  Serial.print(":");
  Serial.println(second);
}

void setup() {
  // put your setup code here, to run once:
  // DS3231
  Wire.begin();
  Serial.begin(9600);
  //servomotor en el pin 12
  servoMotor.attach(12);
  //inicia en la posición 0
  servoMotor.write(0);

  // motor stepper
  myStepper.setSpeed(motSpeed);
  // pinMode(LED,OUTPUT);
  // pinMode(PIR, INPUT);
  establecerFechaYHora();
}

void loop() {
  // put your main code here, to run repeatedly:
  /*  int lecturaPIR = digitalRead(PIR);
  Serial.print("valor PIR: ");
  Serial.println(lecturaPIR); */
  char lecturaSerial = Serial.read();

  // Abrir y cerrar puerta (servomotor)

  if (lecturaSerial == '1') {
    servoMotor.write(180);
  }

  if (lecturaSerial == '2') {
    servoMotor.write(0);
  }

  // Abrir y cerrar ventana (motor stepper)

  // motor stepper
  if (lecturaSerial == '3') {
    myStepper.step(pasosPara90Grados);
    // delay(500);
  }
  if (lecturaSerial == '4') {
    myStepper.step(-pasosPara90Grados);
    // delay(500);
  }

  // --- DS3231
  // se llama la función que permite obtener la fecha y la hora
  if (funcionEjecutada == true) {
    establecerFechaYHora();
    funcionEjecutada = true;
  }

}

/*
    //Función para ver la fecha y hora del DS3231
void verFechaYHoraDS() {
  DateTime now = RTC.now();
  //se obtiene la fecha y hora
  year = now.year();
  month = now.month();
  day = now.day();
  hour = now.hour();
  minute = now.minute();
  second = now.second();
  // Se imprime en el puerto serial
  // Se imprime la fecha en el puerto serial
  Serial.print("Fecha: ");
  Serial.print(day);
  Serial.print("/");
  Serial.print(month);
  Serial.print("/");
  Serial.println(year);

  // Se imprime la hora en el puerto serial
  Serial.print("Hora: ");
  Serial.print(hour);
  Serial.print(":");
  Serial.print(minute);
  Serial.print(":");
  Serial.println(second);
}

String establecerFechaYHora(String hora, String minuto, String segundo) {
  DateTime now = RTC.now();
  //se obtiene la fecha y hora
  year = now.year();
  month = now.month();
  day = now.day();
  hour = hora || now.hour();
  minute = minuto || now.minute();
  second = segundo || now.second();
  // Se imprime en el puerto serial
  // Se imprime la fecha en el puerto serial
  Serial.print("Fecha: ");
  Serial.print(day);
  Serial.print("/");
  Serial.print(month);
  Serial.print("/");
  Serial.println(year);

  // Se imprime la hora en el puerto serial
  Serial.print("Hora: ");
  Serial.print(hour);
  Serial.print(":");
  Serial.print(minute);
  Serial.print(":");
  Serial.println(second);
  
  return "Hora establecida: " + String(hora) + ":" + String(minuto) + ":" + String(segundo);
}

void establecerNuevaFechaYHora(int hora, int minuto, int segundo) {
  DateTime now = RTC.now();
  //se obtiene la fecha y hora actual
  year = now.year();
  month = now.month();
  day = now.day();
  
  // Crear un nuevo objeto DateTime con la fecha y hora deseada
  DateTime newTime(year, month, day, hora, minuto, segundo);
  
  // Establecer la nueva fecha y hora en el DS3231
  RTC.adjust(newTime);
  
  // Se imprime en el puerto serial la nueva fecha y hora
  Serial.print("Fecha: ");
  Serial.print(day);
  Serial.print("/");
  Serial.print(month);
  Serial.print("/");
  Serial.println(year);

  Serial.print("Hora: ");
  Serial.print(hora);
  Serial.print(":");
  Serial.print(minuto);
  Serial.print(":");
  Serial.println(segundo);
  


  if(lecturaSerial == '6') {
    if(String(now.hour()) + ":" + String(now.minute()) + ":" + String(now.second()) >= pruebaFuncionHora) {
      Serial.println("positivo");
      Serial.println("hora establecida prueba: ");
      Serial.print(pruebaFuncionHora);
      Serial.println("Original DS3231: ");
      Serial.println(String(now.hour()) + ":" + String(now.minute()) + ":" + String(now.second()));

      digitalWrite(LED,HIGH);
      
      // Serial.println(String(now.hour()) + ":" + String(now.minute()) + ":" + String(now.second()));
    } else {
      Serial.println("hora no cuadra");
      // Serial.println(String(now.hour()) + ":" + String(now.minute()) + ":" + String(now.second()));
      
    }
  }

*/